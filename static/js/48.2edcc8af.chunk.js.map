{"version":3,"file":"static/js/48.2edcc8af.chunk.js","mappings":"2LAUaA,EAAsC,SAACC,GACdA,EAA3BC,GAAP,IAAWC,EAAuBF,EAAvBE,WAAYC,EAAWH,EAAXG,QACvB,OAGI,iBAAKC,UAAWF,EAAa,qBAAuB,UAApD,WACI,iBAAKE,UAAU,aAAf,WACI,gBAAKA,UAAU,aACVC,IAAKC,EACLC,IAAK,gBACV,cAAGH,UAAU,cAAb,SAA4BD,QAEhC,gBAAKC,UAAU,gBAAf,4BCnBCI,EAAa,WACtB,OACI,iBAAKJ,UAAW,aAAhB,WACI,gBAAKA,UAAU,uBAAf,UACI,gBAAKA,UAAW,gBAAhB,gCAEJ,iBAAKA,UAAU,mBAAf,WACI,iBAAKA,UAAU,yBAAf,WACI,gBAAKA,UAAU,gBACVC,IAAK,oMACLE,IAAK,uBACV,gBAAKH,UAAU,wBAEnB,iBAAMA,UAAU,qBAAhB,uBAGJ,iBAAKA,UAAU,mBAAf,WACI,iBAAKA,UAAU,yBAAf,WACI,gBAAKA,UAAU,gBACVC,IAAK,0NACLE,IAAK,uBACV,gBAAKH,UAAU,wBAEnB,iBAAMA,UAAU,qBAAhB,sBAGJ,iBAAKA,UAAU,mBAAf,WACI,iBAAKA,UAAU,yBAAf,WACI,gBAAKA,UAAU,gBACVC,IAAK,8RACLE,IAAK,uBACV,gBAAKH,UAAU,wBAEnB,iBAAMA,UAAU,qBAAhB,yB,UCzBHK,EAA4C,SAACT,GACtD,IAAOU,EAAYV,EAAZU,KACHC,EAAO,YADQX,EAANC,GAGb,OACI,+BACI,gBAAKG,UAAc,eAAL,WAAuB,sBAArC,UACI,iBAAKA,UAAU,mBAAf,WACI,iBAAKA,UAAU,yBAAf,WACI,gBAAKA,UAAU,gBACVC,IAAKO,EACLL,IAAK,uBACV,gBAAKH,UAAU,wBAEnB,SAAC,KAAD,CAASS,GAAIF,EAAMP,UAAU,qBAA7B,SAAmDM,Y,iDCvBvE,EADmB,CAAE,KAAQ,CAAE,IAAO,MAAO,MAAS,CAAE,QAAW,gBAAiB,UAAa,SAAW,SAAY,CAAC,CAAE,IAAO,OAAQ,MAAS,GAAI,SAAY,CAAC,CAAE,IAAO,QAAS,MAAS,MAAS,CAAE,IAAO,OAAQ,MAAS,CAAE,EAAK,8DAAiE,CAAE,IAAO,OAAQ,MAAS,CAAE,EAAK,gEAAoE,KAAQ,OAAQ,MAAS,Y,UCMpaI,EAAe,SAAsBd,EAAOe,GAC9C,OAAoBC,EAAAA,cAAoBC,EAAAA,GAAUC,EAAAA,EAAAA,IAAcA,EAAAA,EAAAA,GAAc,GAAIlB,GAAQ,GAAI,CAC5Fe,IAAKA,EACLI,KAAMC,MAIVN,EAAaO,YAAc,eAC3B,MAA4BL,EAAAA,WAAiBF,GCJvCQ,GAAaC,EAAAA,EAAAA,IAAU,GAoBhBC,GAAsBC,EAAAA,EAAAA,GAA+B,CAC9DC,KAAM,yBADyBD,EAlB6C,SAACzB,GAE7E,OACI,kBAAMI,UAAU,qBAAqBuB,SAAU3B,EAAM4B,aAArD,WAEI,SAACC,EAAA,EAAD,CAAOzB,UAAU,mBACV0B,YAAa,aACbC,UAAWC,EAAAA,EACXC,SAAU,CAACC,EAAAA,GAAUZ,GACrBZ,KAAM,iBACNyB,KAAM,OACND,UAAQ,KAEf,oBAAQ9B,UAAW,gBAAnB,mBAAyC,SAAC,EAAD,IAAzC,a,8DClBNgC,EAAkB,SAACC,GACrB,MAAO,CACHC,OAAQD,EAAME,KAAKD,SCU3B,IAkBA,GAAeE,EAAAA,EAAAA,IACXC,EAAAA,IDzBG,SAA6BC,GAUhC,OADmCC,EAAAA,EAAAA,IAAQP,EAARO,EAPT,SAAC3C,GACvB,IAAOsC,EAAwBtC,EAAxBsC,OAAWM,GAAlB,OAA+B5C,EAA/B,GAEA,OAAKsC,GACE,SAACI,GAAD,UAAeE,KADF,SAAC,KAAD,CAAU/B,GAAI,iBCsBtC8B,EAAAA,EAAAA,KArBoB,SAACN,GACrB,MAAO,CACHQ,YAAaR,EAAMS,YAAYD,YAC/BE,aAAcV,EAAMS,YAAYC,iBAOb,SAACC,GACxB,MAAO,CACHC,YAAa,SAACC,GACVF,GAASG,EAAAA,EAAAA,GAAcD,SAKnC,EClBmD,SAAClD,GAChD,IACI6C,EAGA7C,EAHA6C,YACAE,EAEA/C,EAFA+C,aACAE,EACAjD,EADAiD,YAGEG,EAAkBP,EAAYQ,KAAI,SAAAC,GAAM,OAC1C,SAAC7C,EAAD,CACYC,KAAM4C,EAAO5C,KACbT,GAAIqD,EAAOrD,IAFNqD,EAAOrD,OAMtBsD,EAAkBR,EAAaM,KAAI,SAAAlD,GAAO,OAC5C,SAACJ,EAAD,CACSI,QAASA,EAAQA,QACjBF,GAAIE,EAAQF,GACZC,WAAYC,EAAQD,YAHfC,EAAQF,OAW1B,OACI,+BACI,qBAASG,UAAW,YAApB,WACI,gBAAKA,UAAU,WAAf,UACI,iBAAKA,UAAU,kBAAf,WACI,gBAAKA,UAAU,cAAf,SACKmD,KAGL,SAAC/B,EAAD,CAAqBG,SAbnB,SAACuB,GACnBD,EAAYC,YAkBJ,gBAAK9C,UAAW,UAAhB,UACI,iBAAKA,UAAU,oBAAf,WACI,gBAAKA,UAAU,WAAf,UACI,iBAAKA,UAAU,kBAAf,WAGI,iBAAKA,UAAU,WAAf,WACI,gBAAKA,UAAU,iBAAf,8BACA,gBAAKA,UAAU,kBAAf,UACI,kBAAOA,UAAW,gBACX+B,KAAK,OACLL,YAAa,4BAI3BsB,QAIT,SAAC5C,EAAD,kB","sources":["components/dialogs/message/Message.tsx","components/dialogs/chatOnline/ChatOnline.tsx","components/dialogs/dialogItem/DialogItem.tsx","../node_modules/@ant-design/icons-svg/es/asn/PlusOutlined.js","../node_modules/@ant-design/icons/es/icons/PlusOutlined.js","components/dialogs/addMessageForm/AddMessageForm.tsx","hoc/WithAuthRedirect.tsx","components/dialogs/DialogsContainer.tsx","components/dialogs/Dialogs.tsx"],"sourcesContent":["import '../message/message.css'\r\nimport React from 'react';\r\nimport PersonAvatar0 from '../../../public/assets/person/person0.jpeg'\r\n\r\n\r\ntype MessagePropsType = {\r\n    ownMessage?: boolean\r\n    message: string\r\n    id?: string\r\n}\r\nexport const Message: React.FC<MessagePropsType> = (props) => {\r\n    const {id, ownMessage, message} = props\r\n    return (\r\n        // У него есть активный класс onwMessage\r\n        // <div className={ownMessage ? \"messagePage onwMessage\" : \"messagePage\"}>\r\n        <div className={ownMessage ? \"message ownMessage\" : \"message\"}>\r\n            <div className=\"messageTop\">\r\n                <img className=\"messageImg\"\r\n                     src={PersonAvatar0}\r\n                     alt={\"persAvatar\"}/>\r\n                <p className=\"messageText\">{message}</p>\r\n            </div>\r\n            <div className=\"messageBottom\">1 hour ago</div>\r\n        </div>\r\n    );\r\n};\r\n\r\n","import \"./chatOnline.css\"\r\nimport React from 'react';\r\n\r\nexport const ChatOnline = () => {\r\n    return (\r\n        <div className={\"chatOnline\"}>\r\n            <div className=\"onlineFriendsWrapper\">\r\n                <div className={\"onlineFriends\"}>Friends online:</div>\r\n            </div>\r\n            <div className=\"chatOnlineFriend\">\r\n                <div className=\"chatOnlineImgContainer\">\r\n                    <img className=\"chatOnlineImg\"\r\n                         src={'https://img.freepik.com/free-photo/pretty-blonde-female-yellow-sweater_273609-4675.jpg?w=826&t=st=1711396907~exp=1711397507~hmac=535eb9b33c1ff0d0ecc547d2225042ab130e4ec899229ab6b1f4b7d707dc2350'}\r\n                         alt={\"avatarUsersInChat\"}/>\r\n                    <div className=\"chatOnlineBadge\"></div>\r\n                </div>\r\n                <span className=\"chatOnlineUserName\">Diana</span>\r\n            </div>\r\n\r\n            <div className=\"chatOnlineFriend\">\r\n                <div className=\"chatOnlineImgContainer\">\r\n                    <img className=\"chatOnlineImg\"\r\n                         src={'https://img.freepik.com/free-photo/handsome-confident-smiling-man-with-hands-crossed-chest_176420-18743.jpg?w=1380&t=st=1711396520~exp=1711397120~hmac=50d4b6ec1ee7a25715f4e10e793b540c0ad7aac77493eda415b56f628447693c'}\r\n                         alt={\"avatarUsersInChat\"}/>\r\n                    <div className=\"chatOnlineBadge\"></div>\r\n                </div>\r\n                <span className=\"chatOnlineUserName\">John</span>\r\n            </div>\r\n\r\n            <div className=\"chatOnlineFriend\">\r\n                <div className=\"chatOnlineImgContainer\">\r\n                    <img className=\"chatOnlineImg\"\r\n                         src={'https://img.freepik.com/free-photo/attractive-stylish-hipster-man-walking-city-street-with-leather-bag-wearing-sweatshot-sunglasses-urban-style-trend-sunny-day_285396-4660.jpg?t=st=1711397006~exp=1711400606~hmac=ca736c1fd2bf57db9f68ddbaaf9e14ce5790ae7d2d49d92265445c017e8a3b4a&w=1380'}\r\n                         alt={\"avatarUsersInChat\"}/>\r\n                    <div className=\"chatOnlineBadge\"></div>\r\n                </div>\r\n                <span className=\"chatOnlineUserName\">Alex</span>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n","import './dialogItem.css'\r\nimport React from 'react';\r\nimport AvatarForChatOnline from \"../../../public/assets/person/person0.jpeg\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\ntype DialogItemPropsType = {\r\n    name: string\r\n    id: string\r\n}\r\n\r\nexport const DialogItem: React.FC<DialogItemPropsType> = (props) => {\r\n    const {name, id} = props;\r\n    let path = '/dialogs/' + id;\r\n\r\n    return (\r\n        <>\r\n            <div className={`${\"conversation\"} ${'conversationActive'}`}>\r\n                <div className=\"chatOnlineFriend\">\r\n                    <div className=\"chatOnlineImgContainer\">\r\n                        <img className=\"chatOnlineImg\"\r\n                             src={AvatarForChatOnline}\r\n                             alt={\"avatarUsersInChat\"}/>\r\n                        <div className=\"chatOnlineBadge\"></div>\r\n                    </div>\r\n                    <NavLink to={path} className=\"chatOnlineUserName\">{name}</NavLink>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\n","// This icon file is generated automatically.\nvar PlusOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"defs\", \"attrs\": {}, \"children\": [{ \"tag\": \"style\", \"attrs\": {} }] }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M482 152h60q8 0 8 8v704q0 8-8 8h-60q-8 0-8-8V160q0-8 8-8z\" } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M176 474h672q8 0 8 8v60q0 8-8 8H176q-8 0-8-8v-60q0-8 8-8z\" } }] }, \"name\": \"plus\", \"theme\": \"outlined\" };\nexport default PlusOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport PlusOutlinedSvg from \"@ant-design/icons-svg/es/asn/PlusOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar PlusOutlined = function PlusOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: PlusOutlinedSvg\n  }));\n};\n\nPlusOutlined.displayName = 'PlusOutlined';\nexport default /*#__PURE__*/React.forwardRef(PlusOutlined);","import React from 'react';\r\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {FormControlTextarea} from \"../../common/formsControl/FormControlTextarea\";\r\nimport {minLength, required} from \"../../../utils/validators/Valodators\";\r\nimport {PlusOutlined} from \"@ant-design/icons\";\r\n\r\n\r\nexport type FormDialogsDataType = {\r\n    newMessageBody: FormDialogsDataType\r\n}\r\n\r\nconst minLength1 = minLength(1);\r\n\r\nexport const AddMessageForm: React.FC<InjectedFormProps<FormDialogsDataType>> = (props) => {\r\n\r\n    return (\r\n        <form className=\"chatMessagesBottom\" onSubmit={props.handleSubmit} >\r\n\r\n            <Field className=\"chatMessageInput\"\r\n                   placeholder={\"Say hello!\"}\r\n                   component={FormControlTextarea}\r\n                   validate={[required, minLength1]}\r\n                   name={'newMessageBody'}\r\n                   type={'text'}\r\n                   required\r\n            />\r\n            <button className={\"chatSubmitBtn\"}>Send <PlusOutlined /> </button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport const AddMessageReduxForm = reduxForm<FormDialogsDataType>({\r\n    form: 'dialogsAddMessageForm'\r\n})(AddMessageForm);\r\n\r\n// onClick={reset} Не срабатывает как надо (раньше)\r\n\r\n\r\n\r\n\r\n","import {Redirect} from \"react-router-dom\";\r\nimport React, {ComponentType} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {RootReduxStoreType} from \"../../src/redux/redux-store\";\r\n\r\ntype MapStateToPropsType = {\r\n    isAuth: boolean\r\n}\r\nconst mapStateToProps = (state: RootReduxStoreType): MapStateToPropsType => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport function WithAuthRedirect<T>(Component: ComponentType<T>) {\r\n\r\n    const RedirectComponent = (props: MapStateToPropsType) => {\r\n        const {isAuth, ...restProps} = props\r\n\r\n        if (!isAuth) return <Redirect to={'/login'}/>\r\n        return <Component {...restProps as T}/>\r\n    }\r\n\r\n    const ConnectedRedirectComponent = connect(mapStateToProps)(RedirectComponent)\r\n    return ConnectedRedirectComponent;\r\n}\r\n","import './dialogs.css'\r\nimport './/chatMenu/chatMenu.css'\r\nimport './dialogItem/dialogItem.css'\r\nimport {Dialogs} from \"./Dialogs\";\r\nimport {\r\n    DialogsType, FormDialogsDataType, MessagesDataType,\r\n    sendMessageAC,\r\n} from \"../../redux/messages-reducer/messages-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {RootReduxStoreType} from \"../../redux/redux-store\";\r\nimport {compose, Dispatch} from \"redux\";\r\nimport React from \"react\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {WithAuthRedirect} from \"../../hoc/WithAuthRedirect\";\r\n\r\n\r\ntype MapStateToPropsType = {\r\n    dialogsData: DialogsType[]\r\n    messagesData: MessagesDataType[]\r\n}\r\nconst mapStateToProps = (state: RootReduxStoreType): MapStateToPropsType => {\r\n    return {\r\n        dialogsData: state.messagePage.dialogsData,\r\n        messagesData: state.messagePage.messagesData,\r\n    }\r\n}\r\n\r\ntype MapDispatchToProps = {\r\n    sendMessage: (messageBody: FormDialogsDataType) => void\r\n}\r\nconst mapDispatchToProps = (dispatch: Dispatch): MapDispatchToProps => {\r\n    return {\r\n        sendMessage: (messageBody: FormDialogsDataType) => {\r\n            dispatch(sendMessageAC(messageBody));\r\n        },\r\n    }\r\n}\r\n\r\nexport default compose<React.ComponentType>(\r\n    withRouter,\r\n    WithAuthRedirect,\r\n    connect<MapStateToPropsType, MapDispatchToProps, any, RootReduxStoreType>(mapStateToProps, mapDispatchToProps))(Dialogs)","import React from 'react';\r\nimport './dialogs.css'\r\nimport {Message} from \"./message/Message\";\r\nimport {ChatOnline} from \"./chatOnline/ChatOnline\";\r\nimport './/chatMenu/chatMenu.css'\r\nimport './dialogItem/dialogItem.css'\r\nimport {DialogItem} from \"./dialogItem/DialogItem\";\r\nimport {DialogsType, MessagesDataType, NewMessageBody} from \"../../redux/messages-reducer/messages-reducer\";\r\nimport {AddMessageReduxForm, FormDialogsDataType} from \"../../../src/components/dialogs/addMessageForm/AddMessageForm\";\r\n\r\n\r\ntype DialogsPropsType = {\r\n    updateNewMessageBody: (body: string) => void\r\n    sendMessage: (messageBody: FormDialogsDataType) => void\r\n    dialogsData: DialogsType[]\r\n    messagesData: MessagesDataType[]\r\n    newMessageBody: NewMessageBody\r\n    isAuth: boolean\r\n}\r\n\r\nexport const Dialogs: React.FC<DialogsPropsType> = (props) => {\r\n    const {\r\n        dialogsData,\r\n        messagesData,\r\n        sendMessage\r\n    } = props;\r\n\r\n    const dialogsElements = dialogsData.map(dialog =>\r\n        <DialogItem key={dialog.id}\r\n                    name={dialog.name}\r\n                    id={dialog.id}\r\n        />\r\n    );\r\n\r\n    const messageElements = messagesData.map(message =>\r\n        <Message key={message.id}\r\n                 message={message.message}\r\n                 id={message.id}\r\n                 ownMessage={message.ownMessage}\r\n        />\r\n    );\r\n\r\n    const addNewMessage = (messageBody: FormDialogsDataType) => {\r\n        sendMessage(messageBody);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <section className={\"messenger\"}>\r\n                <div className=\"messages\">\r\n                    <div className=\"messagesWrapper\">\r\n                        <div className=\"messagesTop\">\r\n                            {messageElements}\r\n                        </div>\r\n\r\n                        <AddMessageReduxForm onSubmit={addNewMessage}/>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n                {/*//Люди справа*/}\r\n                <div className={\"dialogs\"}>\r\n                    <div className=\"chatOnlineWrapper\">\r\n                        <div className=\"chatMenu\">\r\n                            <div className=\"chatMenuWrapper\">\r\n\r\n                                {/*//ChatMenu из компоненты CHATMENU*/}\r\n                                <div className=\"chatMenu\">\r\n                                    <div className=\"dialogsFriends\">Your dialogues:</div>\r\n                                    <div className=\"chatMenuWrapper\">\r\n                                        <input className={\"chatMenuInput\"}\r\n                                               type=\"text\"\r\n                                               placeholder={\"Search for friends\"}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                {dialogsElements}\r\n                            </div>\r\n                        </div>\r\n\r\n                        <ChatOnline/>\r\n                    </div>\r\n\r\n                </div>\r\n            </section>\r\n        </>\r\n    );\r\n};"],"names":["Message","props","id","ownMessage","message","className","src","PersonAvatar0","alt","ChatOnline","DialogItem","name","path","AvatarForChatOnline","to","PlusOutlined","ref","React","AntdIcon","_objectSpread","icon","PlusOutlinedSvg","displayName","minLength1","minLength","AddMessageReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","component","FormControlTextarea","validate","required","type","mapStateToProps","state","isAuth","auth","compose","withRouter","Component","connect","restProps","dialogsData","messagePage","messagesData","dispatch","sendMessage","messageBody","sendMessageAC","dialogsElements","map","dialog","messageElements"],"sourceRoot":""}